
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://jdttdesqckxqcctdjojk.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpkdHRkZXNxY2t4cWNjdGRqb2prIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQzNDg0MTksImV4cCI6MjA1OTkyNDQxOX0.1sLhQg_mq0Y4eH5gyFrYxYv1ODdVTUG4pPS7HCRi3bU";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Create the storage bucket for medical documents if it doesn't exist
const createBucketIfNotExists = async () => {
  const supabaseAdmin = createClient(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);
  
  try {
    const { data, error } = await supabaseAdmin
      .storage
      .getBucket('medical_documents');
      
    if (error && error.message.includes('not found')) {
      const { error: createError } = await supabaseAdmin
        .storage
        .createBucket('medical_documents', {
          public: false,
          fileSizeLimit: 10485760, // 10MB limit
        });
        
      if (createError) {
        console.error('Error creating medical documents bucket:', createError);
      } else {
        console.log('Medical documents bucket created successfully');
      }
    }
  } catch (error) {
    console.error('Error checking for medical documents bucket:', error);
  }
};

// Initialize the bucket
createBucketIfNotExists();

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);
